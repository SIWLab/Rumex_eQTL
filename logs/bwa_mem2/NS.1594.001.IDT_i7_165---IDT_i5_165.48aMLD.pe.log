-----------------------------
Executing in AVX2 mode!!
-----------------------------
Ref file: index/merged_TX_noMatPAR
Entering FMI_search
reference seq len = 4167615747
count
0,	1
1,	1216209749
2,	2083807874
3,	2951405999
4,	4167615747

Reading other elements of the index from files index/merged_TX_noMatPAR
prefix: index/merged_TX_noMatPAR
[M::bwa_idx_load_ele] read 0 ALT contigs
Done reading Index!!
Reading reference genome..
Binary seq file = index/merged_TX_noMatPAR.0123
Reference genome size: 4167615746 bp
Done readng reference genome !!

[0000] 1: Calling process()

Threads used (compute): 20
Info: projected #read in a task: 1324513
------------------------------------------
Memory pre-allocation for chaining: 2786.7754 MB
Memory pre-allocation for BSW: 4792.3405 MB
Memory pre-allocation for BWT: 1546.2835 MB
------------------------------------------
No. of pipeline threads: 2
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 2. Calling mem_process_seqs.., task: 0
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 126281, 34, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (282.15, 107.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (707, 1524, 4000)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10586)
[M::mem_pestat] mean and std.dev: (2494.82, 2432.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13879)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2853.771 CPU sec, 151.947 real sec
[0000] 2. Calling mem_process_seqs.., task: 1
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 126020, 38, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 638)
[M::mem_pestat] mean and std.dev: (280.97, 106.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (198, 1371, 4177)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12135)
[M::mem_pestat] mean and std.dev: (2520.34, 2666.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16114)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2709.985 CPU sec, 138.124 real sec
[0000] 2. Calling mem_process_seqs.., task: 2
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126473, 24, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 637)
[M::mem_pestat] mean and std.dev: (280.18, 106.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 782)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1643, 2730, 3378)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6848)
[M::mem_pestat] mean and std.dev: (2154.76, 1514.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8583)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2692.009 CPU sec, 136.435 real sec
[0000] 2. Calling mem_process_seqs.., task: 3
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 126524, 25, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 262, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 634)
[M::mem_pestat] mean and std.dev: (279.28, 105.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (497, 1484, 4198)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11600)
[M::mem_pestat] mean and std.dev: (2461.68, 2520.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15301)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2691.301 CPU sec, 136.276 real sec
[0000] 2. Calling mem_process_seqs.., task: 4
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 126059, 32, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 262, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (279.35, 106.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 781)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (271, 944, 3946)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11296)
[M::mem_pestat] mean and std.dev: (2147.81, 2547.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14971)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2656.438 CPU sec, 134.686 real sec
[0000] 2. Calling mem_process_seqs.., task: 5
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 126083, 28, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (281.13, 107.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (378, 2700, 4210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11874)
[M::mem_pestat] mean and std.dev: (2647.50, 2526.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15706)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2688.829 CPU sec, 136.497 real sec
[0000] 2. Calling mem_process_seqs.., task: 6
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 127095, 31, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 262, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 634)
[M::mem_pestat] mean and std.dev: (279.69, 105.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (604, 2653, 3637)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9703)
[M::mem_pestat] mean and std.dev: (2643.13, 2168.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12736)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2671.167 CPU sec, 135.338 real sec
[0000] 2. Calling mem_process_seqs.., task: 7
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126586, 31, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 262, 344)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 630)
[M::mem_pestat] mean and std.dev: (278.65, 105.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 773)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (295, 1292, 3971)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11323)
[M::mem_pestat] mean and std.dev: (2448.00, 2533.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14999)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2678.436 CPU sec, 135.761 real sec
[0000] 2. Calling mem_process_seqs.., task: 8
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 126566, 34, 9)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (217, 508, 977)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2497)
[M::mem_pestat] mean and std.dev: (389.38, 298.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3257)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 260, 343)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (277.64, 105.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 769)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (798, 2315, 3448)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8748)
[M::mem_pestat] mean and std.dev: (2283.73, 1775.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11398)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2652.992 CPU sec, 134.132 real sec
[0000] 2. Calling mem_process_seqs.., task: 9
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 125997, 30, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 265, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (282.99, 108.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (565, 2729, 4581)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12613)
[M::mem_pestat] mean and std.dev: (2952.47, 2599.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16629)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2695.380 CPU sec, 136.441 real sec
[0000] 2. Calling mem_process_seqs.., task: 10
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 125739, 21, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 648)
[M::mem_pestat] mean and std.dev: (283.53, 108.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 796)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1476, 2790, 3624)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7920)
[M::mem_pestat] mean and std.dev: (2375.21, 1657.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10068)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2653.937 CPU sec, 134.327 real sec
[0000] 2. Calling mem_process_seqs.., task: 11
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126763, 34, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 641)
[M::mem_pestat] mean and std.dev: (281.88, 107.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (441, 2795, 3962)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11004)
[M::mem_pestat] mean and std.dev: (3085.18, 2748.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14525)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2633.518 CPU sec, 133.335 real sec
[0000] 2. Calling mem_process_seqs.., task: 12
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 126375, 27, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (50, 538, 1156)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3368)
[M::mem_pestat] mean and std.dev: (568.30, 506.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4474)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (281.04, 107.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (745, 2320, 3066)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7708)
[M::mem_pestat] mean and std.dev: (1717.67, 1299.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10029)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2654.260 CPU sec, 134.347 real sec
[0000] 2. Calling mem_process_seqs.., task: 13
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 126201, 32, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (282.17, 108.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (726, 2200, 3409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8775)
[M::mem_pestat] mean and std.dev: (2577.56, 2459.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12415)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 421, 3299)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9515)
[M::mem_pestat] mean and std.dev: (1962.30, 2894.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13542)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2667.583 CPU sec, 134.998 real sec
[0000] 2. Calling mem_process_seqs.., task: 14
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 125972, 24, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 641)
[M::mem_pestat] mean and std.dev: (281.52, 106.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (82, 1323, 2808)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8260)
[M::mem_pestat] mean and std.dev: (1362.32, 1743.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10986)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2662.383 CPU sec, 134.494 real sec
[0000] 2. Calling mem_process_seqs.., task: 15
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 125732, 43, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (281.01, 107.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (324, 1620, 2848)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7896)
[M::mem_pestat] mean and std.dev: (1768.24, 1661.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10420)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2647.039 CPU sec, 133.871 real sec
[0000] 2. Calling mem_process_seqs.., task: 16
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 126747, 29, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 261, 344)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 630)
[M::mem_pestat] mean and std.dev: (278.03, 105.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 773)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (110, 1126, 2929)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8567)
[M::mem_pestat] mean and std.dev: (1790.97, 1997.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11386)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2657.489 CPU sec, 134.531 real sec
[0000] 2. Calling mem_process_seqs.., task: 17
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 126444, 22, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (280.77, 106.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1011, 3429, 5972)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15894)
[M::mem_pestat] mean and std.dev: (3460.32, 2766.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 20855)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2694.387 CPU sec, 136.566 real sec
[0000] 2. Calling mem_process_seqs.., task: 18
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 126293, 33, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (282.83, 107.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (549, 2616, 3695)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9987)
[M::mem_pestat] mean and std.dev: (2345.45, 2091.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13133)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2694.611 CPU sec, 136.461 real sec
[0000] 2. Calling mem_process_seqs.., task: 19
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126609, 30, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (282.89, 108.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (99, 1517, 3180)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9342)
[M::mem_pestat] mean and std.dev: (2189.83, 2514.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12423)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2662.753 CPU sec, 134.840 real sec
[0000] 2. Calling mem_process_seqs.., task: 20
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 126627, 35, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 638)
[M::mem_pestat] mean and std.dev: (281.65, 107.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (440, 2742, 4435)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12425)
[M::mem_pestat] mean and std.dev: (3031.63, 2805.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16420)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2644.392 CPU sec, 133.793 real sec
[0000] 2. Calling mem_process_seqs.., task: 21
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 125901, 28, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (203, 530, 1909)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5321)
[M::mem_pestat] mean and std.dev: (837.10, 765.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7027)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 637)
[M::mem_pestat] mean and std.dev: (280.65, 107.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 782)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1155, 2799, 3196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7278)
[M::mem_pestat] mean and std.dev: (2235.12, 1380.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9319)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2699.287 CPU sec, 136.718 real sec
[0000] 2. Calling mem_process_seqs.., task: 22
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126182, 32, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (280.89, 107.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (257, 1055, 3311)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9419)
[M::mem_pestat] mean and std.dev: (2029.91, 2091.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12473)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2776.552 CPU sec, 140.297 real sec
[0000] 2. Calling mem_process_seqs.., task: 23
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 126641, 28, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (281.39, 107.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (162, 1361, 2789)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8043)
[M::mem_pestat] mean and std.dev: (1611.57, 1558.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10670)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2657.462 CPU sec, 134.854 real sec
[0000] 2. Calling mem_process_seqs.., task: 24
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126776, 26, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 262, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 634)
[M::mem_pestat] mean and std.dev: (279.56, 105.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1246, 2874, 4904)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12220)
[M::mem_pestat] mean and std.dev: (3321.27, 2515.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15878)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2638.005 CPU sec, 133.423 real sec
[0000] 2. Calling mem_process_seqs.., task: 25
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126958, 40, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (200, 260, 343)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 629)
[M::mem_pestat] mean and std.dev: (277.09, 104.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 772)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (240, 1297, 4341)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12543)
[M::mem_pestat] mean and std.dev: (2336.55, 2688.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16644)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2640.303 CPU sec, 133.731 real sec
[0000] 2. Calling mem_process_seqs.., task: 26
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126098, 24, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 638)
[M::mem_pestat] mean and std.dev: (281.43, 106.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (174, 2176, 4716)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13800)
[M::mem_pestat] mean and std.dev: (2598.17, 2779.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18342)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (198, 323, 915)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2349)
[M::mem_pestat] mean and std.dev: (523.00, 446.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3066)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2698.810 CPU sec, 136.643 real sec
[0000] 2. Calling mem_process_seqs.., task: 27
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 126074, 37, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (282.80, 108.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (211, 943, 3712)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10714)
[M::mem_pestat] mean and std.dev: (2494.41, 2951.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14299)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2678.554 CPU sec, 135.409 real sec
[0000] 2. Calling mem_process_seqs.., task: 28
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 126018, 29, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 265, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (283.45, 109.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 799)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (431, 980, 4194)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11720)
[M::mem_pestat] mean and std.dev: (2147.00, 2215.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15483)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (214, 1561, 2874)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8194)
[M::mem_pestat] mean and std.dev: (1881.10, 1968.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10854)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2673.505 CPU sec, 135.284 real sec
[0000] 2. Calling mem_process_seqs.., task: 29
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126219, 40, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (282.71, 108.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (684, 2761, 3748)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9876)
[M::mem_pestat] mean and std.dev: (2449.53, 2051.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12940)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2686.577 CPU sec, 136.108 real sec
[0000] 2. Calling mem_process_seqs.., task: 30
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126990, 26, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 637)
[M::mem_pestat] mean and std.dev: (280.58, 106.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 782)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (330, 2834, 4458)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12714)
[M::mem_pestat] mean and std.dev: (2495.50, 2452.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16842)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2697.214 CPU sec, 136.686 real sec
[0000] 2. Calling mem_process_seqs.., task: 31
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 126575, 28, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 638)
[M::mem_pestat] mean and std.dev: (280.93, 106.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 862, 4136)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11938)
[M::mem_pestat] mean and std.dev: (2013.64, 2317.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15839)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2693.064 CPU sec, 136.314 real sec
[0000] 2. Calling mem_process_seqs.., task: 32
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 126048, 26, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 263, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 638)
[M::mem_pestat] mean and std.dev: (281.02, 107.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1007, 2929, 4596)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11774)
[M::mem_pestat] mean and std.dev: (3173.62, 2402.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15363)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2675.160 CPU sec, 135.624 real sec
[0000] 2. Calling mem_process_seqs.., task: 33
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 126166, 25, 9)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (106, 217, 471)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1201)
[M::mem_pestat] mean and std.dev: (198.25, 128.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1566)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 262, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 634)
[M::mem_pestat] mean and std.dev: (279.17, 105.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (85, 869, 3930)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11620)
[M::mem_pestat] mean and std.dev: (2077.48, 2454.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15465)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2653.885 CPU sec, 134.813 real sec
[0000] 2. Calling mem_process_seqs.., task: 34
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 126020, 26, 4)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (228, 768, 3184)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9096)
[M::mem_pestat] mean and std.dev: (1869.55, 2382.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12052)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 260, 342)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (276.88, 104.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 765)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (351, 1097, 2835)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7803)
[M::mem_pestat] mean and std.dev: (1917.64, 1983.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10287)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2683.869 CPU sec, 135.855 real sec
[0000] 2. Calling mem_process_seqs.., task: 35
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 126372, 41, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (282.15, 107.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (214, 1492, 2843)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8101)
[M::mem_pestat] mean and std.dev: (1794.24, 1749.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10730)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2729.349 CPU sec, 138.512 real sec
[0000] 2. Calling mem_process_seqs.., task: 36
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 125792, 29, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (282.34, 107.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (640, 1280, 3529)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9307)
[M::mem_pestat] mean and std.dev: (2391.45, 2564.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12650)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2717.101 CPU sec, 137.560 real sec
[0000] 2. Calling mem_process_seqs.., task: 37
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 125999, 24, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (177, 313, 1180)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3186)
[M::mem_pestat] mean and std.dev: (633.67, 744.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4189)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (282.98, 108.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (255, 2742, 3638)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10404)
[M::mem_pestat] mean and std.dev: (2621.96, 2315.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13787)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2686.036 CPU sec, 135.772 real sec
[0000] 2. Calling mem_process_seqs.., task: 38
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 126250, 29, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (282.34, 108.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (617, 2096, 2917)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7517)
[M::mem_pestat] mean and std.dev: (2021.62, 1646.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9817)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2723.712 CPU sec, 137.879 real sec
[0000] 2. Calling mem_process_seqs.., task: 39
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 126453, 23, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (281.25, 107.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (324, 1505, 2836)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7860)
[M::mem_pestat] mean and std.dev: (1855.86, 1886.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10372)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (173, 387, 1394)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3836)
[M::mem_pestat] mean and std.dev: (799.40, 819.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5057)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2780.400 CPU sec, 140.516 real sec
[0000] 2. Calling mem_process_seqs.., task: 40
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 126546, 26, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (281.03, 107.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (278, 2394, 3391)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9617)
[M::mem_pestat] mean and std.dev: (2415.27, 2401.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12730)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2670.376 CPU sec, 135.308 real sec
[0000] 2. Calling mem_process_seqs.., task: 41
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126394, 30, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 637)
[M::mem_pestat] mean and std.dev: (280.18, 106.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 782)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (487, 951, 3031)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8119)
[M::mem_pestat] mean and std.dev: (1938.03, 1970.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10663)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2680.035 CPU sec, 135.719 real sec
[0000] 2. Calling mem_process_seqs.., task: 42
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 127359, 29, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 262, 345)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (278.85, 105.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 777)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (762, 2832, 4124)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10848)
[M::mem_pestat] mean and std.dev: (3067.10, 2610.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14210)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2676.578 CPU sec, 135.574 real sec
[0000] 2. Calling mem_process_seqs.., task: 43
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 126204, 48, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (188, 372, 4407)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12845)
[M::mem_pestat] mean and std.dev: (1925.00, 2211.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17064)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 262, 345)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (279.13, 105.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 777)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (207, 1518, 4113)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11925)
[M::mem_pestat] mean and std.dev: (2227.58, 2181.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15831)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (193, 452, 896)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2302)
[M::mem_pestat] mean and std.dev: (454.40, 322.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3005)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2696.996 CPU sec, 136.780 real sec
[0000] 2. Calling mem_process_seqs.., task: 44
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 125903, 25, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 263, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 635)
[M::mem_pestat] mean and std.dev: (280.56, 106.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (323, 2033, 3589)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10121)
[M::mem_pestat] mean and std.dev: (2243.76, 2340.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13387)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2744.676 CPU sec, 139.113 real sec
[0000] 2. Calling mem_process_seqs.., task: 45
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 126024, 37, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 638)
[M::mem_pestat] mean and std.dev: (281.44, 107.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (707, 2540, 4090)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10856)
[M::mem_pestat] mean and std.dev: (2533.76, 2086.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14239)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2672.668 CPU sec, 135.548 real sec
[0000] 2. Calling mem_process_seqs.., task: 46
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 126255, 36, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (281.21, 107.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1224, 2777, 4124)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9924)
[M::mem_pestat] mean and std.dev: (2933.61, 2314.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12824)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (524, 1787, 2515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6497)
[M::mem_pestat] mean and std.dev: (1645.90, 1148.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8488)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2628.875 CPU sec, 133.050 real sec
[0000] 2. Calling mem_process_seqs.., task: 47
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 126756, 30, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 637)
[M::mem_pestat] mean and std.dev: (280.51, 106.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 782)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (540, 2486, 3935)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10725)
[M::mem_pestat] mean and std.dev: (2797.50, 2714.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14120)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2637.670 CPU sec, 133.606 real sec
[0000] 2. Calling mem_process_seqs.., task: 48
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 126524, 30, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 637)
[M::mem_pestat] mean and std.dev: (280.39, 106.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 782)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (653, 2128, 4156)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11162)
[M::mem_pestat] mean and std.dev: (2777.87, 2743.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14665)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (306, 348, 1677)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4419)
[M::mem_pestat] mean and std.dev: (1154.58, 1386.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6701)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2667.253 CPU sec, 135.055 real sec
[0000] 2. Calling mem_process_seqs.., task: 49
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 126766, 17, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 261, 345)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (278.64, 105.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 777)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 1330, 2695)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7721)
[M::mem_pestat] mean and std.dev: (1340.56, 1158.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10234)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2682.085 CPU sec, 136.025 real sec
[0000] 2. Calling mem_process_seqs.., task: 50
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 126228, 31, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (201, 261, 344)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 630)
[M::mem_pestat] mean and std.dev: (278.22, 105.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 773)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (608, 1940, 2790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7154)
[M::mem_pestat] mean and std.dev: (1984.53, 1661.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9336)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2693.398 CPU sec, 136.510 real sec
[0000] 2. Calling mem_process_seqs.., task: 51
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126362, 29, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (200, 260, 342)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (276.57, 104.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 768)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (475, 2168, 6022)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 17116)
[M::mem_pestat] mean and std.dev: (2911.59, 2769.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 22663)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2666.748 CPU sec, 134.978 real sec
[0000] 2. Calling mem_process_seqs.., task: 52
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 126708, 39, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 263, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 635)
[M::mem_pestat] mean and std.dev: (280.57, 105.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (709, 1898, 3467)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8983)
[M::mem_pestat] mean and std.dev: (2256.66, 2215.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11741)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2722.653 CPU sec, 137.922 real sec
[0000] 2. Calling mem_process_seqs.., task: 53
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 125426, 30, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (284.49, 107.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (159, 1132, 2806)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8100)
[M::mem_pestat] mean and std.dev: (1774.17, 1920.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10747)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2814.843 CPU sec, 142.669 real sec
[0000] 2. Calling mem_process_seqs.., task: 54
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 125115, 38, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (282.75, 106.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (431, 1147, 2837)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7649)
[M::mem_pestat] mean and std.dev: (1700.46, 1677.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10055)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2870.949 CPU sec, 145.285 real sec
[0000] 2. Calling mem_process_seqs.., task: 55
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 125465, 31, 9)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (702, 1328, 3647)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9537)
[M::mem_pestat] mean and std.dev: (1647.78, 1353.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12482)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (283.15, 106.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (591, 2016, 3653)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9777)
[M::mem_pestat] mean and std.dev: (2512.23, 2265.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12839)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2864.400 CPU sec, 144.905 real sec
[0000] 2. Calling mem_process_seqs.., task: 56
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 126360, 28, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 264, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 639)
[M::mem_pestat] mean and std.dev: (282.20, 106.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 784)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1200, 2175, 2853)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6159)
[M::mem_pestat] mean and std.dev: (2021.78, 1370.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7812)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2847.076 CPU sec, 143.980 real sec
[0000] 2. Calling mem_process_seqs.., task: 57
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 125950, 30, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (281.49, 106.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (228, 1017, 2782)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7890)
[M::mem_pestat] mean and std.dev: (1787.89, 1945.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10444)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (363, 947, 2080)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5514)
[M::mem_pestat] mean and std.dev: (931.45, 717.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7231)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2797.057 CPU sec, 141.580 real sec
[0000] 2. Calling mem_process_seqs.., task: 58
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 126427, 20, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 263, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 635)
[M::mem_pestat] mean and std.dev: (280.83, 105.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1098, 2889, 6306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16722)
[M::mem_pestat] mean and std.dev: (3515.65, 3096.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21930)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2742.780 CPU sec, 138.926 real sec
[0000] 2. Calling mem_process_seqs.., task: 59
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 125601, 25, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 635)
[M::mem_pestat] mean and std.dev: (280.86, 105.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1078, 2063, 3680)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8884)
[M::mem_pestat] mean and std.dev: (2567.21, 2174.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11486)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (162, 387, 1242)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3402)
[M::mem_pestat] mean and std.dev: (436.25, 384.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4482)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2740.795 CPU sec, 138.896 real sec
[0000] 2. Calling mem_process_seqs.., task: 60
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126008, 34, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (284.64, 108.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (178, 1288, 2895)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8329)
[M::mem_pestat] mean and std.dev: (1858.15, 1754.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11046)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2819.962 CPU sec, 142.760 real sec
[0000] 2. Calling mem_process_seqs.., task: 61
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 126195, 42, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (284.18, 107.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (506, 2311, 2863)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7577)
[M::mem_pestat] mean and std.dev: (1903.72, 1571.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9934)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2825.076 CPU sec, 143.125 real sec
[0000] 2. Calling mem_process_seqs.., task: 62
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 125429, 21, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (239, 272, 2039)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5639)
[M::mem_pestat] mean and std.dev: (539.78, 618.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7439)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (283.36, 107.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (204, 1569, 2888)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8256)
[M::mem_pestat] mean and std.dev: (2093.38, 2141.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10940)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2824.150 CPU sec, 142.975 real sec
[0000] 2. Calling mem_process_seqs.., task: 63
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 125745, 26, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (283.83, 107.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (624, 1410, 2862)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7338)
[M::mem_pestat] mean and std.dev: (2034.81, 1924.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9734)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (169, 240, 1627)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4543)
[M::mem_pestat] mean and std.dev: (956.82, 1191.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6001)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2802.744 CPU sec, 141.941 real sec
[0000] 2. Calling mem_process_seqs.., task: 64
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 125536, 42, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (282.68, 106.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (627, 2358, 4576)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12474)
[M::mem_pestat] mean and std.dev: (2836.88, 2509.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16423)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2816.267 CPU sec, 142.607 real sec
[0000] 2. Calling mem_process_seqs.., task: 65
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 126044, 29, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (283.56, 107.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (281, 1544, 2854)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8000)
[M::mem_pestat] mean and std.dev: (2179.31, 2297.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11370)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2803.554 CPU sec, 142.099 real sec
[0000] 2. Calling mem_process_seqs.., task: 66
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 126055, 46, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (281.71, 106.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (267, 1658, 3379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9603)
[M::mem_pestat] mean and std.dev: (2479.80, 2590.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12843)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2769.219 CPU sec, 140.002 real sec
[0000] 2. Calling mem_process_seqs.., task: 67
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 125736, 39, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (281.26, 105.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (458, 1421, 3865)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10679)
[M::mem_pestat] mean and std.dev: (2315.92, 2164.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14086)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2783.260 CPU sec, 140.900 real sec
[0000] 2. Calling mem_process_seqs.., task: 68
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 125974, 29, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (284.98, 108.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (196, 978, 3268)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9412)
[M::mem_pestat] mean and std.dev: (1674.93, 1942.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12484)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (114, 189, 827)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2253)
[M::mem_pestat] mean and std.dev: (312.08, 355.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2966)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2810.248 CPU sec, 142.212 real sec
[0000] 2. Calling mem_process_seqs.., task: 69
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 125308, 35, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 648)
[M::mem_pestat] mean and std.dev: (283.86, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 796)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 1199, 2790)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8000)
[M::mem_pestat] mean and std.dev: (1622.26, 1874.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10605)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2800.235 CPU sec, 141.692 real sec
[0000] 2. Calling mem_process_seqs.., task: 70
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 126243, 29, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (283.72, 108.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (550, 1505, 2763)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7189)
[M::mem_pestat] mean and std.dev: (1738.89, 1633.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9402)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2813.752 CPU sec, 142.421 real sec
[0000] 2. Calling mem_process_seqs.., task: 71
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 126073, 34, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (284.46, 108.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (490, 2575, 3962)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10906)
[M::mem_pestat] mean and std.dev: (2712.12, 2611.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14378)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2803.727 CPU sec, 142.135 real sec
[0000] 2. Calling mem_process_seqs.., task: 72
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 125986, 36, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (282.91, 107.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (498, 2764, 4177)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11535)
[M::mem_pestat] mean and std.dev: (2731.47, 2732.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15214)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2814.607 CPU sec, 142.358 real sec
[0000] 2. Calling mem_process_seqs.., task: 73
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 126195, 27, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (281.86, 106.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (350, 1419, 2836)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7808)
[M::mem_pestat] mean and std.dev: (1627.54, 1296.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10294)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2795.468 CPU sec, 141.592 real sec
[0000] 2. Calling mem_process_seqs.., task: 74
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126164, 31, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 638)
[M::mem_pestat] mean and std.dev: (281.14, 106.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (693, 2144, 3494)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9096)
[M::mem_pestat] mean and std.dev: (2677.94, 2305.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11901)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2733.222 CPU sec, 138.369 real sec
[0000] 2. Calling mem_process_seqs.., task: 75
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 125286, 51, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (281.85, 106.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (155, 834, 2695)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7775)
[M::mem_pestat] mean and std.dev: (1459.04, 1811.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10315)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2799.036 CPU sec, 141.665 real sec
[0000] 2. Calling mem_process_seqs.., task: 76
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 125580, 38, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (284.54, 108.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (246, 914, 2899)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8205)
[M::mem_pestat] mean and std.dev: (1816.49, 1915.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10858)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2853.805 CPU sec, 144.672 real sec
[0000] 2. Calling mem_process_seqs.., task: 77
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 125497, 41, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (285.02, 108.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (515, 2678, 5312)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14906)
[M::mem_pestat] mean and std.dev: (2991.51, 2927.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19703)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2834.004 CPU sec, 143.427 real sec
[0000] 2. Calling mem_process_seqs.., task: 78
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 125418, 27, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (284.02, 107.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1524, 2796, 5071)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12165)
[M::mem_pestat] mean and std.dev: (3368.04, 2690.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15712)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (301, 519, 6040)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 17518)
[M::mem_pestat] mean and std.dev: (2808.27, 3096.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 23257)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2762.817 CPU sec, 139.615 real sec
[0000] 2. Calling mem_process_seqs.., task: 79
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 126087, 42, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (284.98, 108.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (803, 2603, 4130)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10784)
[M::mem_pestat] mean and std.dev: (3046.00, 2666.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14111)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2764.241 CPU sec, 139.869 real sec
[0000] 2. Calling mem_process_seqs.., task: 80
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 126257, 32, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (283.35, 107.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (519, 1386, 2748)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7206)
[M::mem_pestat] mean and std.dev: (1793.97, 1649.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9435)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 1198, 3987)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11619)
[M::mem_pestat] mean and std.dev: (1617.73, 1814.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15435)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2809.819 CPU sec, 142.279 real sec
[0000] 2. Calling mem_process_seqs.., task: 81
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 126190, 30, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 639)
[M::mem_pestat] mean and std.dev: (282.41, 106.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 784)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (716, 2723, 6113)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16907)
[M::mem_pestat] mean and std.dev: (3238.63, 2965.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 22304)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2800.561 CPU sec, 141.981 real sec
[0000] 2. Calling mem_process_seqs.., task: 82
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 126500, 34, 6)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (154, 385, 703)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1801)
[M::mem_pestat] mean and std.dev: (354.70, 275.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2350)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 264, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 639)
[M::mem_pestat] mean and std.dev: (281.90, 106.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 784)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (558, 2182, 2891)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7557)
[M::mem_pestat] mean and std.dev: (2252.85, 1986.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10200)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2729.456 CPU sec, 137.869 real sec
[0000] 2. Calling mem_process_seqs.., task: 83
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 126316, 21, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (283.64, 107.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (238, 1575, 5234)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15226)
[M::mem_pestat] mean and std.dev: (2615.43, 2631.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 20222)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2835.184 CPU sec, 143.485 real sec
[0000] 2. Calling mem_process_seqs.., task: 84
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 124893, 38, 1)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 455, 1142)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3044)
[M::mem_pestat] mean and std.dev: (787.45, 855.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4210)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (283.87, 107.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (851, 2181, 2875)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6923)
[M::mem_pestat] mean and std.dev: (1946.26, 1521.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8947)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2830.775 CPU sec, 143.366 real sec
[0000] 2. Calling mem_process_seqs.., task: 85
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 126028, 24, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (284.37, 108.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (400, 2717, 4044)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11332)
[M::mem_pestat] mean and std.dev: (2528.21, 2239.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14976)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (339, 560, 2941)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8145)
[M::mem_pestat] mean and std.dev: (1091.60, 1433.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2913.359 CPU sec, 147.573 real sec
[0000] 2. Calling mem_process_seqs.., task: 86
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 125230, 31, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (284.83, 108.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (493, 1042, 2883)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7663)
[M::mem_pestat] mean and std.dev: (1613.20, 1416.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10053)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (170, 372, 1740)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4880)
[M::mem_pestat] mean and std.dev: (1071.55, 1444.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6848)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2846.789 CPU sec, 144.205 real sec
[0000] 2. Calling mem_process_seqs.., task: 87
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 125834, 32, 6)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (128, 167, 1203)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3353)
[M::mem_pestat] mean and std.dev: (666.20, 798.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4428)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (284.89, 108.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (809, 2786, 3830)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9872)
[M::mem_pestat] mean and std.dev: (2859.66, 2498.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12893)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2769.470 CPU sec, 140.018 real sec
[0000] 2. Calling mem_process_seqs.., task: 88
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 125943, 27, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (283.18, 107.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1098, 2352, 3558)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8478)
[M::mem_pestat] mean and std.dev: (2252.00, 1764.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10938)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2815.214 CPU sec, 142.513 real sec
[0000] 2. Calling mem_process_seqs.., task: 89
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 125811, 35, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 639)
[M::mem_pestat] mean and std.dev: (282.12, 106.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 784)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (377, 2679, 5149)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14693)
[M::mem_pestat] mean and std.dev: (2767.89, 2667.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19465)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2771.645 CPU sec, 140.497 real sec
[0000] 2. Calling mem_process_seqs.., task: 90
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 125683, 27, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (281.51, 106.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (379, 1622, 2931)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8035)
[M::mem_pestat] mean and std.dev: (1977.85, 1855.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10587)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2774.509 CPU sec, 140.460 real sec
[0000] 2. Calling mem_process_seqs.., task: 91
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 125819, 30, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (283.83, 107.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (606, 1961, 3515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9333)
[M::mem_pestat] mean and std.dev: (2127.97, 1776.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12242)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2867.026 CPU sec, 145.119 real sec
[0000] 2. Calling mem_process_seqs.., task: 92
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 125084, 30, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (283.68, 107.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (194, 2686, 3640)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10532)
[M::mem_pestat] mean and std.dev: (2724.13, 2574.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13978)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2872.041 CPU sec, 145.555 real sec
[0000] 2. Calling mem_process_seqs.., task: 93
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 125668, 29, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (283.70, 107.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (445, 1216, 2649)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7057)
[M::mem_pestat] mean and std.dev: (1463.41, 1308.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9261)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2824.881 CPU sec, 143.142 real sec
[0000] 2. Calling mem_process_seqs.., task: 94
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 125898, 38, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (283.75, 107.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1270, 2796, 3280)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7300)
[M::mem_pestat] mean and std.dev: (2406.14, 1589.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9310)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (104, 307, 903)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2501)
[M::mem_pestat] mean and std.dev: (412.00, 391.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3300)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2805.639 CPU sec, 142.305 real sec
[0000] 2. Calling mem_process_seqs.., task: 95
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 126188, 30, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (283.08, 107.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (377, 1301, 2847)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7787)
[M::mem_pestat] mean and std.dev: (1684.64, 1473.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10257)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2755.090 CPU sec, 139.399 real sec
[0000] 2. Calling mem_process_seqs.., task: 96
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 125698, 35, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (282.48, 106.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (739, 2808, 4477)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11953)
[M::mem_pestat] mean and std.dev: (2906.06, 2580.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15691)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2846.865 CPU sec, 144.207 real sec
[0000] 2. Calling mem_process_seqs.., task: 97
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 126185, 30, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 635)
[M::mem_pestat] mean and std.dev: (280.62, 105.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (315, 2712, 4232)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12066)
[M::mem_pestat] mean and std.dev: (3214.57, 3162.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15983)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 225, 844)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2190)
[M::mem_pestat] mean and std.dev: (412.89, 355.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2863)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2772.068 CPU sec, 140.261 real sec
[0000] 2. Calling mem_process_seqs.., task: 98
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 12644136, nseq: 83736
	[0000][ M::kt_pipeline] read 83736 sequences (12644136 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 125778, 30, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 634)
[M::mem_pestat] mean and std.dev: (279.91, 105.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (614, 1816, 3825)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10247)
[M::mem_pestat] mean and std.dev: (2493.73, 2183.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13458)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (192, 537, 2955)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8481)
[M::mem_pestat] mean and std.dev: (1655.67, 2142.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11244)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2747.442 CPU sec, 139.378 real sec
[0000] 2. Calling mem_process_seqs.., task: 99
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 83736
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 8109, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 263, 343)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (279.33, 101.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 763)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 83736 reads in 200.609 CPU sec, 10.712 real sec
[0000] read_chunk: 200000000, work_chunk_size: 0, nseq: 0
[0000] read_chunk: 200000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 20
Processor is runnig @2194.712638 MHz
Runtime profile:

	 Time taken for main_mem function: 13836.11 Sec

	IO times (sec) :
	Reading IO time (reads) avg: 400.03, (400.03, 400.03)
	Writing IO time (SAM) avg: 2796.23, (2796.23, 2796.23)
	Reading IO time (Reference Genome) avg: 4.35, (4.35, 4.35)
	Index read time avg: 36.63, (36.63, 36.63)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 13787.87
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 13759.62, (13759.62, 13759.62)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 6482.64, (6482.64, 6482.64)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 7177.15, (7177.15, 7177.15)
		SMEM compute avg: 1299.68, (1313.68, 1287.69)
		SAL compute avg: 688.75, (692.58, 684.48)
		BSW time, avg: 3734.54, (3737.11, 3731.08)

	Total allocs: 2052337745 = 2052337745 out total requests: -533598474, Rate: -3.85

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 32
	SIMD_WIDTH16 X: 16
	AVG_SEEDS_PER_READ: 64
