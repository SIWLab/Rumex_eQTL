-----------------------------
Executing in AVX2 mode!!
-----------------------------
Ref file: index/merged_TX_noMatPAR
Entering FMI_search
reference seq len = 4167615747
count
0,	1
1,	1216209749
2,	2083807874
3,	2951405999
4,	4167615747

Reading other elements of the index from files index/merged_TX_noMatPAR
prefix: index/merged_TX_noMatPAR
[M::bwa_idx_load_ele] read 0 ALT contigs
Done reading Index!!
Reading reference genome..
Binary seq file = index/merged_TX_noMatPAR.0123
Reference genome size: 4167615746 bp
Done readng reference genome !!

[0000] 1: Calling process()

Threads used (compute): 20
Info: projected #read in a task: 1324513
------------------------------------------
Memory pre-allocation for chaining: 2786.7754 MB
Memory pre-allocation for BSW: 4792.3405 MB
Memory pre-allocation for BWT: 1546.2835 MB
------------------------------------------
No. of pipeline threads: 2
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 2. Calling mem_process_seqs.., task: 0
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118167, 23, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (284.81, 109.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (529, 2049, 4038)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11056)
[M::mem_pestat] mean and std.dev: (2971.57, 3011.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15016)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2927.247 CPU sec, 157.604 real sec
[0000] 2. Calling mem_process_seqs.., task: 1
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 118662, 26, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 648)
[M::mem_pestat] mean and std.dev: (284.34, 109.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 796)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 739, 2778)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8146)
[M::mem_pestat] mean and std.dev: (1614.19, 1960.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10830)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2808.947 CPU sec, 143.459 real sec
[0000] 2. Calling mem_process_seqs.., task: 2
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 118699, 30, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (190, 295, 2695)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7705)
[M::mem_pestat] mean and std.dev: (1323.70, 1596.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10210)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (283.09, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (641, 2053, 3284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8570)
[M::mem_pestat] mean and std.dev: (2027.34, 1694.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11213)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2735.231 CPU sec, 138.701 real sec
[0000] 2. Calling mem_process_seqs.., task: 3
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 118931, 29, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (282.20, 107.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (252, 1691, 4117)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11847)
[M::mem_pestat] mean and std.dev: (2281.41, 2180.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15712)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2818.312 CPU sec, 142.721 real sec
[0000] 2. Calling mem_process_seqs.., task: 4
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 119014, 22, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (280.96, 107.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (233, 893, 1526)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4112)
[M::mem_pestat] mean and std.dev: (931.80, 818.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5405)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2727.980 CPU sec, 138.233 real sec
[0000] 2. Calling mem_process_seqs.., task: 5
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 118321, 19, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (282.43, 108.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (891, 1077, 2001)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4221)
[M::mem_pestat] mean and std.dev: (1159.94, 724.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5331)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2784.254 CPU sec, 141.372 real sec
[0000] 2. Calling mem_process_seqs.., task: 6
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118755, 29, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (283.78, 107.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (357, 729, 3453)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9645)
[M::mem_pestat] mean and std.dev: (2007.36, 2542.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12741)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2784.834 CPU sec, 141.414 real sec
[0000] 2. Calling mem_process_seqs.., task: 7
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118373, 26, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (282.74, 108.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1024, 2096, 5172)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13468)
[M::mem_pestat] mean and std.dev: (2976.85, 2529.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17616)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2776.611 CPU sec, 140.879 real sec
[0000] 2. Calling mem_process_seqs.., task: 8
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118885, 20, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 264, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (282.45, 107.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (797, 1253, 4196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10994)
[M::mem_pestat] mean and std.dev: (2182.25, 2431.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14393)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2754.958 CPU sec, 139.957 real sec
[0000] 2. Calling mem_process_seqs.., task: 9
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118870, 27, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 262, 345)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 631)
[M::mem_pestat] mean and std.dev: (279.43, 105.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (512, 879, 2305)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5891)
[M::mem_pestat] mean and std.dev: (1140.50, 1022.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7684)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2748.069 CPU sec, 139.970 real sec
[0000] 2. Calling mem_process_seqs.., task: 10
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118479, 23, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 262, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 634)
[M::mem_pestat] mean and std.dev: (279.80, 106.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (181, 564, 3711)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10771)
[M::mem_pestat] mean and std.dev: (2346.00, 3341.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15712)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2789.600 CPU sec, 141.488 real sec
[0000] 2. Calling mem_process_seqs.., task: 11
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 117886, 19, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 652)
[M::mem_pestat] mean and std.dev: (285.19, 109.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 801)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (512, 1779, 2765)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7271)
[M::mem_pestat] mean and std.dev: (1771.22, 1718.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9524)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2783.383 CPU sec, 141.160 real sec
[0000] 2. Calling mem_process_seqs.., task: 12
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 118468, 27, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 268, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (285.95, 110.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 805)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (359, 1036, 3891)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10955)
[M::mem_pestat] mean and std.dev: (2160.04, 2332.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14487)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2759.117 CPU sec, 139.825 real sec
[0000] 2. Calling mem_process_seqs.., task: 13
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 118265, 35, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 652)
[M::mem_pestat] mean and std.dev: (284.93, 109.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 801)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (111, 904, 2874)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8400)
[M::mem_pestat] mean and std.dev: (1624.32, 2026.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11163)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2756.045 CPU sec, 139.819 real sec
[0000] 2. Calling mem_process_seqs.., task: 14
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 118663, 31, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (283.97, 108.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (273, 545, 1545)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4089)
[M::mem_pestat] mean and std.dev: (626.37, 561.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5361)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2761.796 CPU sec, 139.860 real sec
[0000] 2. Calling mem_process_seqs.., task: 15
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 118447, 26, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 651)
[M::mem_pestat] mean and std.dev: (284.31, 109.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 800)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (263, 930, 3571)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10187)
[M::mem_pestat] mean and std.dev: (1924.50, 2317.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13495)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2741.494 CPU sec, 139.461 real sec
[0000] 2. Calling mem_process_seqs.., task: 16
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 118557, 34, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (284.53, 108.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (690, 965, 4132)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11016)
[M::mem_pestat] mean and std.dev: (2452.62, 2523.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14458)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2736.181 CPU sec, 138.636 real sec
[0000] 2. Calling mem_process_seqs.., task: 17
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118346, 28, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (284.60, 109.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 508, 2004)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5630)
[M::mem_pestat] mean and std.dev: (1216.26, 1573.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7509)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2779.232 CPU sec, 141.059 real sec
[0000] 2. Calling mem_process_seqs.., task: 18
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 118733, 26, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (284.07, 108.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (309, 1423, 4237)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12093)
[M::mem_pestat] mean and std.dev: (2803.50, 3010.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16021)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2730.269 CPU sec, 138.289 real sec
[0000] 2. Calling mem_process_seqs.., task: 19
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118967, 25, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (283.49, 108.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (161, 749, 1823)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5147)
[M::mem_pestat] mean and std.dev: (848.30, 966.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6809)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2749.645 CPU sec, 139.242 real sec
[0000] 2. Calling mem_process_seqs.., task: 20
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 119332, 28, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 638)
[M::mem_pestat] mean and std.dev: (280.98, 106.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (493, 949, 3371)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9127)
[M::mem_pestat] mean and std.dev: (1998.39, 2092.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12005)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2736.162 CPU sec, 138.656 real sec
[0000] 2. Calling mem_process_seqs.., task: 21
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 118245, 21, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 639)
[M::mem_pestat] mean and std.dev: (281.97, 107.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 784)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (126, 934, 5490)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16218)
[M::mem_pestat] mean and std.dev: (2570.62, 2798.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21582)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2734.443 CPU sec, 138.599 real sec
[0000] 2. Calling mem_process_seqs.., task: 22
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 117666, 25, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 268, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (286.02, 109.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 805)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (389, 2309, 6924)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 19994)
[M::mem_pestat] mean and std.dev: (3425.92, 3447.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 26529)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2798.696 CPU sec, 141.658 real sec
[0000] 2. Calling mem_process_seqs.., task: 23
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118677, 27, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 268, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (286.21, 110.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 805)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (422, 1707, 3660)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10136)
[M::mem_pestat] mean and std.dev: (2326.26, 2485.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13374)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2747.620 CPU sec, 139.250 real sec
[0000] 2. Calling mem_process_seqs.., task: 24
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 118814, 25, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 652)
[M::mem_pestat] mean and std.dev: (285.48, 109.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 801)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 418, 3651)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10765)
[M::mem_pestat] mean and std.dev: (1713.04, 2552.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14322)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2711.540 CPU sec, 137.448 real sec
[0000] 2. Calling mem_process_seqs.., task: 25
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118638, 16, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (284.49, 109.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 241, 3521)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10325)
[M::mem_pestat] mean and std.dev: (1594.12, 2641.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13727)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2801.192 CPU sec, 142.250 real sec
[0000] 2. Calling mem_process_seqs.., task: 26
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 118893, 20, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 265, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (282.63, 108.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1119, 1770, 3639)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8679)
[M::mem_pestat] mean and std.dev: (2413.61, 2214.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11273)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2842.106 CPU sec, 143.766 real sec
[0000] 2. Calling mem_process_seqs.., task: 27
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 119204, 18, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (282.45, 107.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (366, 913, 1845)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4803)
[M::mem_pestat] mean and std.dev: (955.56, 926.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6282)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2734.921 CPU sec, 138.495 real sec
[0000] 2. Calling mem_process_seqs.., task: 28
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 118635, 30, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (282.73, 107.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (504, 1797, 3386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9150)
[M::mem_pestat] mean and std.dev: (2218.97, 2022.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12032)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2742.325 CPU sec, 139.180 real sec
[0000] 2. Calling mem_process_seqs.., task: 29
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 118822, 26, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (282.28, 107.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (489, 2114, 4675)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13047)
[M::mem_pestat] mean and std.dev: (2870.38, 2614.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17233)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2746.237 CPU sec, 139.591 real sec
[0000] 2. Calling mem_process_seqs.., task: 30
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 119154, 26, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 264, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 639)
[M::mem_pestat] mean and std.dev: (282.20, 107.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 784)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (336, 615, 1358)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3402)
[M::mem_pestat] mean and std.dev: (597.09, 492.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4424)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (258, 332, 834)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1986)
[M::mem_pestat] mean and std.dev: (334.33, 200.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2562)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2747.263 CPU sec, 139.030 real sec
[0000] 2. Calling mem_process_seqs.., task: 31
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 119093, 20, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 262, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 634)
[M::mem_pestat] mean and std.dev: (279.43, 105.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (458, 1454, 5958)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16958)
[M::mem_pestat] mean and std.dev: (3032.70, 3134.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 22458)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2754.182 CPU sec, 139.855 real sec
[0000] 2. Calling mem_process_seqs.., task: 32
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 118412, 24, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (282.80, 108.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (417, 1228, 3435)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9471)
[M::mem_pestat] mean and std.dev: (2014.83, 2022.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12489)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2799.445 CPU sec, 141.849 real sec
[0000] 2. Calling mem_process_seqs.., task: 33
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118036, 31, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 267, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 653)
[M::mem_pestat] mean and std.dev: (285.72, 109.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 802)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (249, 597, 2473)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6921)
[M::mem_pestat] mean and std.dev: (1218.17, 1544.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9145)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2789.519 CPU sec, 141.465 real sec
[0000] 2. Calling mem_process_seqs.., task: 34
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 119190, 18, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (285.49, 109.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 798)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (222, 824, 2170)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6066)
[M::mem_pestat] mean and std.dev: (1295.33, 1362.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8014)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2778.142 CPU sec, 141.237 real sec
[0000] 2. Calling mem_process_seqs.., task: 35
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 118559, 35, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 267, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (285.58, 109.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 798)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (321, 1097, 4025)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11433)
[M::mem_pestat] mean and std.dev: (2080.00, 2176.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15137)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2794.179 CPU sec, 141.714 real sec
[0000] 2. Calling mem_process_seqs.., task: 36
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 117745, 30, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 652)
[M::mem_pestat] mean and std.dev: (284.85, 109.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 801)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (454, 924, 1496)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3580)
[M::mem_pestat] mean and std.dev: (844.08, 503.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4622)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2776.005 CPU sec, 140.767 real sec
[0000] 2. Calling mem_process_seqs.., task: 37
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 118841, 19, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 651)
[M::mem_pestat] mean and std.dev: (284.65, 109.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 800)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (532, 1101, 2755)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7201)
[M::mem_pestat] mean and std.dev: (1375.18, 1428.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9424)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2774.941 CPU sec, 140.719 real sec
[0000] 2. Calling mem_process_seqs.., task: 38
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 118018, 17, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (283.12, 108.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (287, 836, 3680)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10466)
[M::mem_pestat] mean and std.dev: (1579.06, 1800.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13859)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2747.445 CPU sec, 139.565 real sec
[0000] 2. Calling mem_process_seqs.., task: 39
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 118689, 28, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (136, 316, 1829)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5215)
[M::mem_pestat] mean and std.dev: (846.90, 882.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6908)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (283.40, 108.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (168, 958, 2342)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6690)
[M::mem_pestat] mean and std.dev: (1254.76, 1491.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8864)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2781.733 CPU sec, 141.243 real sec
[0000] 2. Calling mem_process_seqs.., task: 40
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118801, 36, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (283.46, 108.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (575, 1514, 4489)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12317)
[M::mem_pestat] mean and std.dev: (2458.67, 2356.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16231)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2797.154 CPU sec, 141.715 real sec
[0000] 2. Calling mem_process_seqs.., task: 41
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 118529, 33, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (282.11, 107.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (212, 2848, 4356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12644)
[M::mem_pestat] mean and std.dev: (2771.58, 2316.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16788)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2804.206 CPU sec, 142.083 real sec
[0000] 2. Calling mem_process_seqs.., task: 42
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 119095, 17, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 262, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 634)
[M::mem_pestat] mean and std.dev: (279.64, 105.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (302, 782, 2352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6452)
[M::mem_pestat] mean and std.dev: (1011.40, 1102.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8502)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2768.199 CPU sec, 140.262 real sec
[0000] 2. Calling mem_process_seqs.., task: 43
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 118163, 21, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 648)
[M::mem_pestat] mean and std.dev: (283.58, 108.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 796)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (934, 1588, 5337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14143)
[M::mem_pestat] mean and std.dev: (2948.00, 2381.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18546)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2787.598 CPU sec, 141.356 real sec
[0000] 2. Calling mem_process_seqs.., task: 44
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 118560, 30, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 652)
[M::mem_pestat] mean and std.dev: (285.21, 109.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 801)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (569, 1152, 1886)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4520)
[M::mem_pestat] mean and std.dev: (1082.00, 824.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5837)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2813.997 CPU sec, 142.571 real sec
[0000] 2. Calling mem_process_seqs.., task: 45
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118109, 33, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 268, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 652)
[M::mem_pestat] mean and std.dev: (285.41, 109.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 801)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (395, 838, 3629)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10097)
[M::mem_pestat] mean and std.dev: (2373.18, 2674.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13331)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2802.768 CPU sec, 142.312 real sec
[0000] 2. Calling mem_process_seqs.., task: 46
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 117774, 37, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (185, 440, 770)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1940)
[M::mem_pestat] mean and std.dev: (519.27, 379.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2525)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 652)
[M::mem_pestat] mean and std.dev: (285.79, 109.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 801)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (506, 904, 5028)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14072)
[M::mem_pestat] mean and std.dev: (2511.11, 2990.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18594)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2752.458 CPU sec, 139.668 real sec
[0000] 2. Calling mem_process_seqs.., task: 47
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118261, 20, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (284.90, 109.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (332, 1844, 5119)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14693)
[M::mem_pestat] mean and std.dev: (2838.50, 2967.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19480)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2769.388 CPU sec, 140.460 real sec
[0000] 2. Calling mem_process_seqs.., task: 48
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 118456, 23, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (284.11, 109.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1105, 2960, 4505)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11305)
[M::mem_pestat] mean and std.dev: (3054.57, 2227.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14705)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2717.469 CPU sec, 137.922 real sec
[0000] 2. Calling mem_process_seqs.., task: 49
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 118805, 31, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (283.73, 108.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (392, 963, 4743)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13445)
[M::mem_pestat] mean and std.dev: (2667.16, 3002.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17796)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2758.979 CPU sec, 139.928 real sec
[0000] 2. Calling mem_process_seqs.., task: 50
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 118372, 29, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (283.85, 107.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (505, 1500, 4312)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11926)
[M::mem_pestat] mean and std.dev: (2330.59, 2299.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15733)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2747.928 CPU sec, 139.462 real sec
[0000] 2. Calling mem_process_seqs.., task: 51
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 118702, 30, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (282.96, 108.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (50, 558, 3250)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9650)
[M::mem_pestat] mean and std.dev: (1748.52, 2645.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12850)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2742.136 CPU sec, 139.104 real sec
[0000] 2. Calling mem_process_seqs.., task: 52
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 119516, 29, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 641)
[M::mem_pestat] mean and std.dev: (281.49, 107.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (739, 1611, 4240)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11242)
[M::mem_pestat] mean and std.dev: (2788.24, 2506.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14743)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2752.665 CPU sec, 139.324 real sec
[0000] 2. Calling mem_process_seqs.., task: 53
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 118608, 27, 6)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (159, 1237, 2551)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7335)
[M::mem_pestat] mean and std.dev: (1665.70, 1854.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9727)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 634)
[M::mem_pestat] mean and std.dev: (279.97, 106.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (252, 913, 6824)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 19968)
[M::mem_pestat] mean and std.dev: (3129.56, 3489.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 26540)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2723.909 CPU sec, 138.062 real sec
[0000] 2. Calling mem_process_seqs.., task: 54
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118308, 22, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (283.17, 108.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (203, 551, 4329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12581)
[M::mem_pestat] mean and std.dev: (1989.36, 2610.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16707)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2763.270 CPU sec, 139.883 real sec
[0000] 2. Calling mem_process_seqs.., task: 55
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 118448, 24, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 266, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 648)
[M::mem_pestat] mean and std.dev: (283.76, 108.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 796)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (615, 955, 4119)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11127)
[M::mem_pestat] mean and std.dev: (2013.25, 2393.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14631)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2746.616 CPU sec, 139.318 real sec
[0000] 2. Calling mem_process_seqs.., task: 56
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 117884, 38, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (284.92, 109.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (206, 977, 3770)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10898)
[M::mem_pestat] mean and std.dev: (2104.26, 2367.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14462)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2730.517 CPU sec, 138.117 real sec
[0000] 2. Calling mem_process_seqs.., task: 57
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 118340, 17, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (284.09, 108.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (668, 1994, 3588)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9428)
[M::mem_pestat] mean and std.dev: (2343.71, 2085.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12348)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2769.035 CPU sec, 140.488 real sec
[0000] 2. Calling mem_process_seqs.., task: 58
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 118331, 27, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (283.30, 108.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (137, 622, 2613)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7565)
[M::mem_pestat] mean and std.dev: (1574.31, 2001.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10041)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2744.124 CPU sec, 139.092 real sec
[0000] 2. Calling mem_process_seqs.., task: 59
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 119194, 23, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (282.79, 108.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (267, 599, 1383)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3615)
[M::mem_pestat] mean and std.dev: (665.35, 636.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4731)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2739.136 CPU sec, 139.101 real sec
[0000] 2. Calling mem_process_seqs.., task: 60
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 119056, 21, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 264, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 641)
[M::mem_pestat] mean and std.dev: (282.05, 107.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (514, 679, 4661)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12955)
[M::mem_pestat] mean and std.dev: (2103.29, 2589.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17102)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2747.640 CPU sec, 139.344 real sec
[0000] 2. Calling mem_process_seqs.., task: 61
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 118959, 18, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 263, 348)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 638)
[M::mem_pestat] mean and std.dev: (280.76, 106.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (514, 1329, 3739)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10189)
[M::mem_pestat] mean and std.dev: (2045.61, 2015.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13414)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2739.658 CPU sec, 139.124 real sec
[0000] 2. Calling mem_process_seqs.., task: 62
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 119117, 30, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 263, 346)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 634)
[M::mem_pestat] mean and std.dev: (279.82, 106.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (150, 596, 1900)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5400)
[M::mem_pestat] mean and std.dev: (1069.97, 1181.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7150)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2737.642 CPU sec, 138.905 real sec
[0000] 2. Calling mem_process_seqs.., task: 63
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 118951, 26, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 262, 345)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 631)
[M::mem_pestat] mean and std.dev: (279.07, 106.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (687, 2228, 4418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11880)
[M::mem_pestat] mean and std.dev: (2726.46, 2428.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15611)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2731.220 CPU sec, 138.551 real sec
[0000] 2. Calling mem_process_seqs.., task: 64
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 119062, 19, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (202, 261, 344)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 628)
[M::mem_pestat] mean and std.dev: (278.50, 105.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 770)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (726, 971, 3469)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8955)
[M::mem_pestat] mean and std.dev: (1973.74, 1890.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11698)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2766.400 CPU sec, 140.449 real sec
[0000] 2. Calling mem_process_seqs.., task: 65
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 118048, 29, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 269, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 651)
[M::mem_pestat] mean and std.dev: (286.68, 108.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 799)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (333, 890, 3544)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9966)
[M::mem_pestat] mean and std.dev: (1663.41, 1752.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13177)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (203, 294, 2247)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6335)
[M::mem_pestat] mean and std.dev: (1086.18, 1297.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8379)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2855.305 CPU sec, 144.759 real sec
[0000] 2. Calling mem_process_seqs.., task: 66
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 117307, 22, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 268, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (285.47, 108.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (949, 2736, 5089)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13369)
[M::mem_pestat] mean and std.dev: (2876.41, 2370.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17509)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2922.819 CPU sec, 148.235 real sec
[0000] 2. Calling mem_process_seqs.., task: 67
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 116964, 28, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (284.88, 107.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (470, 2038, 3549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9707)
[M::mem_pestat] mean and std.dev: (2515.79, 2440.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12786)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2978.213 CPU sec, 150.987 real sec
[0000] 2. Calling mem_process_seqs.., task: 68
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 117906, 28, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (285.63, 108.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (226, 699, 3307)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9469)
[M::mem_pestat] mean and std.dev: (1680.50, 1790.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12550)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2922.499 CPU sec, 148.281 real sec
[0000] 2. Calling mem_process_seqs.., task: 69
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (2, 117917, 26, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (285.26, 108.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (639, 1378, 4303)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11631)
[M::mem_pestat] mean and std.dev: (2496.23, 2490.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15295)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2915.562 CPU sec, 147.654 real sec
[0000] 2. Calling mem_process_seqs.., task: 70
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 117999, 26, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (284.67, 107.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (393, 2874, 3624)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10086)
[M::mem_pestat] mean and std.dev: (2465.92, 2231.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13317)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2882.363 CPU sec, 146.006 real sec
[0000] 2. Calling mem_process_seqs.., task: 71
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 118625, 30, 4)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (220, 616, 5266)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15358)
[M::mem_pestat] mean and std.dev: (2059.38, 2668.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 20404)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (283.92, 107.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (152, 1753, 4475)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13121)
[M::mem_pestat] mean and std.dev: (2666.60, 2745.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17444)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2828.879 CPU sec, 143.471 real sec
[0000] 2. Calling mem_process_seqs.., task: 72
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 118687, 28, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (283.30, 107.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 806, 3638)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10366)
[M::mem_pestat] mean and std.dev: (1876.21, 2127.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13730)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2843.962 CPU sec, 143.890 real sec
[0000] 2. Calling mem_process_seqs.., task: 73
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
[0000] 3. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 118968, 24, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (283.05, 106.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (451, 2980, 6104)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 17410)
[M::mem_pestat] mean and std.dev: (3424.38, 3148.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 23063)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2813.031 CPU sec, 142.649 real sec
[0000] 2. Calling mem_process_seqs.., task: 74
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118101, 24, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (285.42, 108.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (182, 349, 989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2603)
[M::mem_pestat] mean and std.dev: (411.90, 335.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3410)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2927.481 CPU sec, 148.388 real sec
[0000] 2. Calling mem_process_seqs.., task: 75
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 117836, 29, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 269, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 654)
[M::mem_pestat] mean and std.dev: (287.17, 109.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 803)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (598, 1931, 5133)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14203)
[M::mem_pestat] mean and std.dev: (2748.79, 2257.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18738)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2908.675 CPU sec, 147.399 real sec
[0000] 2. Calling mem_process_seqs.., task: 76
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 118440, 34, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 268, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 648)
[M::mem_pestat] mean and std.dev: (286.17, 108.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (251, 911, 3065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8693)
[M::mem_pestat] mean and std.dev: (1836.21, 2112.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11507)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (328, 558, 1509)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3871)
[M::mem_pestat] mean and std.dev: (644.08, 553.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2867.291 CPU sec, 145.005 real sec
[0000] 2. Calling mem_process_seqs.., task: 77
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 117990, 20, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 268, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 648)
[M::mem_pestat] mean and std.dev: (285.89, 108.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (504, 5388, 6104)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 17304)
[M::mem_pestat] mean and std.dev: (3637.40, 2917.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 22904)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2881.592 CPU sec, 146.055 real sec
[0000] 2. Calling mem_process_seqs.., task: 78
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 117641, 36, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (285.41, 107.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (292, 1205, 4207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12037)
[M::mem_pestat] mean and std.dev: (2145.03, 2326.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15952)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2932.877 CPU sec, 148.690 real sec
[0000] 2. Calling mem_process_seqs.., task: 79
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 117802, 26, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (285.82, 108.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 798)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (597, 2230, 4396)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11994)
[M::mem_pestat] mean and std.dev: (2771.12, 2397.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15793)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2847.523 CPU sec, 144.220 real sec
[0000] 2. Calling mem_process_seqs.., task: 80
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 117868, 27, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 268, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 648)
[M::mem_pestat] mean and std.dev: (286.20, 108.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (564, 1101, 4224)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11544)
[M::mem_pestat] mean and std.dev: (2638.96, 2900.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15204)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2863.192 CPU sec, 145.171 real sec
[0000] 2. Calling mem_process_seqs.., task: 81
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 118596, 28, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (285.55, 108.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 798)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (452, 1396, 3247)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8837)
[M::mem_pestat] mean and std.dev: (1988.43, 2135.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11632)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2836.888 CPU sec, 143.305 real sec
[0000] 2. Calling mem_process_seqs.., task: 82
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 117997, 34, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (284.18, 107.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (354, 1312, 3889)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10959)
[M::mem_pestat] mean and std.dev: (2286.74, 2424.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14494)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2862.707 CPU sec, 144.919 real sec
[0000] 2. Calling mem_process_seqs.., task: 83
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118331, 23, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (282.70, 106.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (147, 535, 5341)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15729)
[M::mem_pestat] mean and std.dev: (2626.04, 3140.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 20923)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2851.352 CPU sec, 144.282 real sec
[0000] 2. Calling mem_process_seqs.., task: 84
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 117938, 26, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 268, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 651)
[M::mem_pestat] mean and std.dev: (286.40, 109.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 799)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (276, 742, 3908)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11172)
[M::mem_pestat] mean and std.dev: (1936.31, 2464.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14804)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2925.382 CPU sec, 148.211 real sec
[0000] 2. Calling mem_process_seqs.., task: 85
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 118256, 29, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 647, 783)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1879)
[M::mem_pestat] mean and std.dev: (464.08, 276.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2427)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 269, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 654)
[M::mem_pestat] mean and std.dev: (287.22, 110.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 803)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (411, 934, 3610)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10008)
[M::mem_pestat] mean and std.dev: (1887.55, 2128.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13207)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2862.767 CPU sec, 145.210 real sec
[0000] 2. Calling mem_process_seqs.., task: 86
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118280, 27, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 653)
[M::mem_pestat] mean and std.dev: (286.17, 109.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 802)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (754, 1317, 3642)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9418)
[M::mem_pestat] mean and std.dev: (1987.38, 2016.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12306)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (374, 562, 1699)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4349)
[M::mem_pestat] mean and std.dev: (770.00, 736.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5674)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2867.060 CPU sec, 145.380 real sec
[0000] 2. Calling mem_process_seqs.., task: 87
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 117639, 41, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 653)
[M::mem_pestat] mean and std.dev: (286.07, 109.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 802)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (179, 795, 2437)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6953)
[M::mem_pestat] mean and std.dev: (1328.76, 1487.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9211)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2868.606 CPU sec, 145.289 real sec
[0000] 2. Calling mem_process_seqs.., task: 88
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 117941, 20, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 269, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 653)
[M::mem_pestat] mean and std.dev: (286.60, 109.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 802)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (398, 880, 5497)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15695)
[M::mem_pestat] mean and std.dev: (1982.20, 2216.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 20794)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2844.718 CPU sec, 144.187 real sec
[0000] 2. Calling mem_process_seqs.., task: 89
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 118402, 26, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (286.14, 108.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 798)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (290, 1384, 3518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9974)
[M::mem_pestat] mean and std.dev: (2163.19, 2218.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13202)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2825.363 CPU sec, 142.940 real sec
[0000] 2. Calling mem_process_seqs.., task: 90
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 118242, 29, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (284.08, 108.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (819, 1934, 4739)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12579)
[M::mem_pestat] mean and std.dev: (2790.14, 2416.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16499)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2832.738 CPU sec, 143.456 real sec
[0000] 2. Calling mem_process_seqs.., task: 91
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 118508, 32, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (283.96, 107.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (443, 1161, 3069)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8321)
[M::mem_pestat] mean and std.dev: (1720.29, 1822.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10947)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2843.490 CPU sec, 143.922 real sec
[0000] 2. Calling mem_process_seqs.., task: 92
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 118238, 29, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (283.00, 107.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (508, 1047, 3146)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8422)
[M::mem_pestat] mean and std.dev: (1614.93, 1535.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11060)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (245, 476, 1376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3638)
[M::mem_pestat] mean and std.dev: (869.60, 844.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4769)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2797.382 CPU sec, 141.496 real sec
[0000] 2. Calling mem_process_seqs.., task: 93
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 118438, 27, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (113, 232, 391)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 947)
[M::mem_pestat] mean and std.dev: (181.12, 114.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1225)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (282.60, 106.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (138, 361, 1850)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5274)
[M::mem_pestat] mean and std.dev: (994.85, 1279.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6986)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2813.924 CPU sec, 142.574 real sec
[0000] 2. Calling mem_process_seqs.., task: 94
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118241, 27, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 270, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 651)
[M::mem_pestat] mean and std.dev: (286.88, 109.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 799)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (219, 1544, 4595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13347)
[M::mem_pestat] mean and std.dev: (2429.19, 2526.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17723)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2864.895 CPU sec, 144.934 real sec
[0000] 2. Calling mem_process_seqs.., task: 95
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 117770, 20, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 269, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 651)
[M::mem_pestat] mean and std.dev: (286.67, 109.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 799)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (202, 572, 1134)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2998)
[M::mem_pestat] mean and std.dev: (515.71, 410.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3930)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2853.735 CPU sec, 144.461 real sec
[0000] 2. Calling mem_process_seqs.., task: 96
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 118217, 23, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 269, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 654)
[M::mem_pestat] mean and std.dev: (286.82, 109.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 803)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (540, 2176, 5148)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14364)
[M::mem_pestat] mean and std.dev: (3001.83, 2806.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18972)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2843.981 CPU sec, 144.052 real sec
[0000] 2. Calling mem_process_seqs.., task: 97
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 117824, 32, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 269, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 654)
[M::mem_pestat] mean and std.dev: (286.83, 109.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 803)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (285, 974, 3938)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11244)
[M::mem_pestat] mean and std.dev: (2289.44, 2865.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14897)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2792.374 CPU sec, 141.667 real sec
[0000] 2. Calling mem_process_seqs.., task: 98
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 117821, 28, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 269, 357)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 657)
[M::mem_pestat] mean and std.dev: (288.02, 110.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 807)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (486, 2040, 4967)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13929)
[M::mem_pestat] mean and std.dev: (2916.39, 3038.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18410)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2807.134 CPU sec, 142.332 real sec
[0000] 2. Calling mem_process_seqs.., task: 99
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118406, 30, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 653)
[M::mem_pestat] mean and std.dev: (286.39, 109.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 802)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (196, 629, 1542)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4234)
[M::mem_pestat] mean and std.dev: (794.27, 860.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5580)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2826.058 CPU sec, 142.920 real sec
[0000] 2. Calling mem_process_seqs.., task: 100
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 117809, 21, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 267, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (284.93, 108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (860, 1209, 5304)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14192)
[M::mem_pestat] mean and std.dev: (2397.71, 2332.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 18636)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2840.777 CPU sec, 143.891 real sec
[0000] 2. Calling mem_process_seqs.., task: 101
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 118366, 32, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (284.64, 107.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (391, 1209, 4411)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12451)
[M::mem_pestat] mean and std.dev: (2303.62, 2343.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16471)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2807.721 CPU sec, 142.192 real sec
[0000] 2. Calling mem_process_seqs.., task: 102
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 118253, 34, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (283.34, 107.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (363, 1341, 3424)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9546)
[M::mem_pestat] mean and std.dev: (2034.30, 2320.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12607)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2850.323 CPU sec, 143.984 real sec
[0000] 2. Calling mem_process_seqs.., task: 103
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 118309, 19, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (283.88, 107.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (973, 1458, 4830)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12544)
[M::mem_pestat] mean and std.dev: (2839.89, 2782.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16401)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2838.461 CPU sec, 143.525 real sec
[0000] 2. Calling mem_process_seqs.., task: 104
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 117767, 36, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (208, 270, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 652)
[M::mem_pestat] mean and std.dev: (287.40, 109.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 800)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (635, 1169, 4144)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11162)
[M::mem_pestat] mean and std.dev: (2527.94, 2685.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14671)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2976.298 CPU sec, 150.659 real sec
[0000] 2. Calling mem_process_seqs.., task: 105
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 118080, 30, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (457, 682, 798)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1480)
[M::mem_pestat] mean and std.dev: (530.38, 207.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1821)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 269, 357)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 659)
[M::mem_pestat] mean and std.dev: (287.61, 110.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (230, 775, 2919)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8297)
[M::mem_pestat] mean and std.dev: (1571.40, 1905.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10986)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2910.634 CPU sec, 147.404 real sec
[0000] 2. Calling mem_process_seqs.., task: 106
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 117976, 21, 3)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (712, 1520, 3198)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8170)
[M::mem_pestat] mean and std.dev: (1619.56, 1324.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 10656)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 269, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 656)
[M::mem_pestat] mean and std.dev: (287.18, 109.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 806)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (170, 943, 3992)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11636)
[M::mem_pestat] mean and std.dev: (2017.57, 2278.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15458)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2837.690 CPU sec, 143.555 real sec
[0000] 2. Calling mem_process_seqs.., task: 107
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (3, 117617, 26, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 269, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 656)
[M::mem_pestat] mean and std.dev: (287.16, 110.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 806)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (381, 1772, 3777)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10569)
[M::mem_pestat] mean and std.dev: (2259.08, 2097.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13965)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2864.156 CPU sec, 144.926 real sec
[0000] 2. Calling mem_process_seqs.., task: 108
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 117945, 30, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (256, 544, 2215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6133)
[M::mem_pestat] mean and std.dev: (608.44, 609.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8092)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 269, 357)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 657)
[M::mem_pestat] mean and std.dev: (287.40, 110.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 807)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (445, 2752, 4399)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12307)
[M::mem_pestat] mean and std.dev: (2592.80, 2386.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16261)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 971, 1837)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5007)
[M::mem_pestat] mean and std.dev: (1111.11, 1380.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6631)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2812.798 CPU sec, 142.244 real sec
[0000] 2. Calling mem_process_seqs.., task: 109
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 118307, 32, 3)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (154, 312, 597)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1483)
[M::mem_pestat] mean and std.dev: (289.67, 213.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1926)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (285.75, 108.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 798)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (171, 1094, 4215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12303)
[M::mem_pestat] mean and std.dev: (2359.91, 2682.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16347)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2829.094 CPU sec, 143.121 real sec
[0000] 2. Calling mem_process_seqs.., task: 110
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 118319, 16, 6)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (222, 308, 5841)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 17079)
[M::mem_pestat] mean and std.dev: (1646.50, 2468.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 22698)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 649)
[M::mem_pestat] mean and std.dev: (285.26, 108.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (37, 141, 2484)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7378)
[M::mem_pestat] mean and std.dev: (1250.31, 1870.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9825)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2805.836 CPU sec, 142.238 real sec
[0000] 2. Calling mem_process_seqs.., task: 111
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 117945, 22, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 267, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (284.93, 108.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (538, 976, 3812)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10360)
[M::mem_pestat] mean and std.dev: (2356.86, 2590.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13634)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2813.800 CPU sec, 142.414 real sec
[0000] 2. Calling mem_process_seqs.., task: 112
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118731, 29, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)
[M::mem_pestat] mean and std.dev: (284.29, 108.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (123, 1042, 3904)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11466)
[M::mem_pestat] mean and std.dev: (2399.07, 3100.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15247)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2814.560 CPU sec, 142.797 real sec
[0000] 2. Calling mem_process_seqs.., task: 113
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 118732, 25, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (284.60, 108.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (125, 555, 4015)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11795)
[M::mem_pestat] mean and std.dev: (2015.92, 2585.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15685)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2896.901 CPU sec, 146.561 real sec
[0000] 2. Calling mem_process_seqs.., task: 114
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 117348, 32, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 267, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (285.33, 108.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (423, 829, 3934)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10956)
[M::mem_pestat] mean and std.dev: (2359.09, 2655.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14467)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2921.755 CPU sec, 147.774 real sec
[0000] 2. Calling mem_process_seqs.., task: 115
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118531, 29, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 269, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 651)
[M::mem_pestat] mean and std.dev: (286.28, 108.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 799)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (50, 204, 3553)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10559)
[M::mem_pestat] mean and std.dev: (1620.38, 2256.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14062)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2894.827 CPU sec, 146.535 real sec
[0000] 2. Calling mem_process_seqs.., task: 116
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 118552, 25, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 268, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 648)
[M::mem_pestat] mean and std.dev: (286.12, 108.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (789, 1135, 5422)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14688)
[M::mem_pestat] mean and std.dev: (2695.52, 2497.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19321)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (157, 892, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6688)
[M::mem_pestat] mean and std.dev: (714.70, 719.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8865)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2883.563 CPU sec, 145.764 real sec
[0000] 2. Calling mem_process_seqs.., task: 117
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 118122, 26, 3)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (207, 269, 356)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 654)
[M::mem_pestat] mean and std.dev: (286.92, 109.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 803)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (538, 1114, 5210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 14554)
[M::mem_pestat] mean and std.dev: (2638.65, 2544.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 19226)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2854.082 CPU sec, 144.594 real sec
[0000] 2. Calling mem_process_seqs.., task: 118
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 117992, 25, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 353)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 647)
[M::mem_pestat] mean and std.dev: (285.07, 108.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (241, 888, 5347)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 15559)
[M::mem_pestat] mean and std.dev: (2744.56, 2978.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 20665)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2871.330 CPU sec, 145.318 real sec
[0000] 2. Calling mem_process_seqs.., task: 119
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 117915, 29, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 268, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (285.60, 108.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 798)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (135, 702, 3103)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9039)
[M::mem_pestat] mean and std.dev: (1669.62, 1719.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 12007)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2822.211 CPU sec, 142.992 real sec
[0000] 2. Calling mem_process_seqs.., task: 120
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 118290, 29, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 267, 352)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (284.36, 107.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (586, 1779, 5783)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16177)
[M::mem_pestat] mean and std.dev: (2902.83, 2876.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21374)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2837.995 CPU sec, 143.665 real sec
[0000] 2. Calling mem_process_seqs.., task: 121
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
[0000] read_chunk: 200000000, work_chunk_size: 200000104, nseq: 1324504
	[0000][ M::kt_pipeline] read 1324504 sequences (200000104 bp)...
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 118270, 32, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (205, 266, 351)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 643)
[M::mem_pestat] mean and std.dev: (283.72, 107.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (261, 1311, 4040)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 11598)
[M::mem_pestat] mean and std.dev: (2201.00, 2589.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 15377)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2794.554 CPU sec, 141.483 real sec
[0000] 2. Calling mem_process_seqs.., task: 122
[0000] 3. Calling kt_for - worker_bwt
[0000] read_chunk: 200000000, work_chunk_size: 57882830, nseq: 383330
	[0000][ M::kt_pipeline] read 383330 sequences (57882830 bp)...
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 1324504
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 118691, 23, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 265, 350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 642)
[M::mem_pestat] mean and std.dev: (282.82, 107.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (221, 788, 3495)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10043)
[M::mem_pestat] mean and std.dev: (2120.00, 2841.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13485)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1324504 reads in 2824.157 CPU sec, 143.527 real sec
[0000] 2. Calling mem_process_seqs.., task: 123
[0000] 3. Calling kt_for - worker_bwt
[0000] 3. Calling kt_for - worker_aln
Inferring insert size distribution from data, l_pac: 2083807873, n: 383330
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 34230, 13, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (204, 264, 349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 639)
[M::mem_pestat] mean and std.dev: (282.31, 106.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 784)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (333, 667, 5925)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 17109)
[M::mem_pestat] mean and std.dev: (2594.54, 3051.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 22701)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[0000] 10. Calling kt_for - worker_sam
[0000] read_chunk: 200000000, work_chunk_size: 0, nseq: 0
	[0000][ M::mem_process_seqs] Processed 383330 reads in 818.216 CPU sec, 41.520 real sec
[0000] read_chunk: 200000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 20
Processor is runnig @2194.682094 MHz
Runtime profile:

	 Time taken for main_mem function: 17627.99 Sec

	IO times (sec) :
	Reading IO time (reads) avg: 500.68, (500.68, 500.68)
	Writing IO time (SAM) avg: 3614.81, (3614.81, 3614.81)
	Reading IO time (Reference Genome) avg: 4.65, (4.65, 4.65)
	Index read time avg: 37.19, (37.19, 37.19)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 17579.28
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 17563.15, (17563.15, 17563.15)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 8305.94, (8305.94, 8305.94)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 9114.84, (9114.84, 9114.84)
		SMEM compute avg: 1719.75, (1741.99, 1707.42)
		SAL compute avg: 880.06, (886.06, 874.34)
		BSW time, avg: 4712.81, (4717.91, 4708.01)

	Total allocs: 269638139 = 269638139 out total requests: -2005330113, Rate: -0.13

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 32
	SIMD_WIDTH16 X: 16
	AVG_SEEDS_PER_READ: 64
